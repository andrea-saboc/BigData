version: '3'

services:
  zoo1:
    image: zookeeper:3.4.9
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - zoo1:/data
      - zoo1log:/datalog
    networks:
      - asvsp_network

  kafka1:
    image: confluentinc/cp-kafka:5.5.12
    container_name: kafka1
    ports:
      - "9092:9092"
    restart: always
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka1:/var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      - asvsp_network

  kafka2:
    image: confluentinc/cp-kafka:5.5.12
    container_name: kafka2
    ports:
      - "9093:9093"
    restart: always
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka2:/var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      - asvsp_network

  producer:
    build: 
      context: ../Producer/Real
    container_name: kafka_producer_1
    restart: unless-stopped
    mem_limit: 200M
    volumes:
      - ../Producer/Real:/app:ro
    environment:
      - KAFKA_BROKER=kafka1:19092
      - KAFKA_TOPIC=chicago-traffic
      - DATASET_API_LINK=https://data.cityofchicago.org/resource/n4j6-wkkf.json
    depends_on:
      - kafka1
    networks:
      - asvsp_network

  init-kafka:
      image: confluentinc/cp-kafka:6.1.1
      depends_on:
        - kafka1
        - kafka2
      entrypoint: [ '/bin/sh', '-c' ]
      command: |
        "
        # blocks until kafka is reachable
        kafka-topics --bootstrap-server kafka1:19092 --list

        echo -e 'Creating kafka topics'
        kafka-topics --bootstrap-server kafka1:19092 --create --if-not-exists --topic chicago-traffic --replication-factor 1 --partitions 1
        echo -e 'Successfully created the following topics:'
        kafka-topics --bootstrap-server kafka2:19093 --list
        "
      networks:
        - asvsp_network

volumes:
  zoo1:
  zoo1log:
  kafka1:
  kafka2:

networks:
  asvsp_network:
    external: true